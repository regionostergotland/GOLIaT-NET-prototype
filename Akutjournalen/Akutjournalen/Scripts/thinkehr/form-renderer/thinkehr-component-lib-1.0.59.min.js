window.ehrComponentsLib||(window.ehrComponentsLib={}),window.ehrComponentsLib.DatastoreFilterQuery=function(){},window.ehrComponentsLib.DatastoreFilterQuery.prototype.query=function(uri,filterModel,onResultCallback,onErrorCallback){uri||(console.log("INFO DatastoreFilterQuery.query no uri value"),onResultCallback(null));var options={data:filterModel,success:function(result){onResultCallback(result)},error:onErrorCallback};$.ajax(uri,options)};var ehrAngularModule=angular.module("thinkehrForms4");ehrAngularModule.factory("datastoreFilterQueryService",function(){return new window.ehrComponentsLib.DatastoreFilterQuery}),window.ehrComponentsLib.DatastoreFilterTestQuery=function(){},window.ehrComponentsLib.DatastoreFilterTestQuery.prototype.query=function(uri,filterModel,onResultCallback){var _addToFilteredDataRecursive=function(keyHierarchy,filterModel,item,addToFilteredData){if(keyHierarchy.length<1)return!0;var checkCurrKey=keyHierarchy.splice(0,1)[0],checkNext=!1;return filterModel[checkCurrKey]?item[checkCurrKey]&&item[checkCurrKey].toLowerCase().indexOf(filterModel[checkCurrKey].toLowerCase())>-1&&(checkNext=!0):checkNext=!0,checkNext&&(addToFilteredData[checkCurrKey]||(addToFilteredData[checkCurrKey]={}),addToFilteredData[checkCurrKey][item[checkCurrKey]]=item),checkNext?_addToFilteredDataRecursive(keyHierarchy,filterModel,item,addToFilteredData):!1},_data=[{id:1,country:"Albania",city:"albC1"},{id:2,country:"Albania",city:"albC2"},{id:3,country:"Albania",city:"albC3"},{id:4,country:"Bilbao",city:"bilC1"},{id:5,country:"Bilbao",city:"bilC2"},{id:6,country:"Bilbao",city:"bilC3"},{id:7,country:"Bilbao",city:"bilC4"},{id:8,country:"Costa Rica",city:"costa rica C1"},{id:9,country:"Costa Rica",city:"costa rica C2"},{id:10,country:"Costa Rica",city:"a1costa rica C2"},{id:11,country:"Costa Rica",city:"costa rica C3"}],keyHierarchy=["country","city"],filteredData={};_data.forEach(function(item){_addToFilteredDataRecursive(keyHierarchy.slice(),filterModel,item,filteredData)},this);var filteredDataByKey={};for(var key in filterModel){var currKeyArr=[];for(var keyVal in filteredData[key])currKeyArr.push(filteredData[key][keyVal]);filteredDataByKey[key]=currKeyArr}onResultCallback(filteredDataByKey)},window.ehrComponentsLib||(window.ehrComponentsLib={}),window.ehrComponentsLib.CompoundAutocompleteFieldGroup=function(datastore){this.components=[],this.datastore=datastore,this._datastoreUri=null},window.ehrComponentsLib.CompoundAutocompleteFieldGroup.prototype.registerCompoundField=function(key,fieldComponent,setValueFn){this.components.push({key:key,fieldComponent:fieldComponent,setValue:setValueFn})},window.ehrComponentsLib.CompoundAutocompleteFieldGroup.prototype.updateFieldsDatasource=function(forFieldId){var forAutocompleteComponent,filterModel={},areObjectPropValuesEqual=function(filterModel,currItem){for(var p in filterModel)if(filterModel.hasOwnProperty(p)&&filterModel[p]!==currItem[p])return!1;return!0},removeMatchedPropItems=function(filterModel,queryResultArr){for(var removeFromArr=queryResultArr.slice(),i=removeFromArr.length-1;i>-1;i--){var currItem=removeFromArr[i];areObjectPropValuesEqual(filterModel,currItem)&&removeFromArr.splice(i,1)}return removeFromArr};return this.components.forEach(function(compDef){filterModel[compDef.key]=compDef.fieldComponent.value().trim(),compDef.key==forFieldId&&(forAutocompleteComponent=compDef.fieldComponent)}),forAutocompleteComponent?(this.datastore.query(this._datastoreUri,filterModel,function(queryResultArr){queryResultArr=removeMatchedPropItems(filterModel,queryResultArr);var currValue=forAutocompleteComponent.value(),dataSource=new kendo.data.DataSource({data:queryResultArr});forAutocompleteComponent.setDataSource(dataSource),forAutocompleteComponent.value(currValue),forAutocompleteComponent.search(currValue)}),!0):!1},window.ehrComponentsLib.CompoundAutocompleteFieldGroup.prototype.setCompoundFieldValues=function(item){this.components.forEach(function(compDef){compDef.setValue(item[compDef.key])})},window.ehrComponentsLib.CompoundAutocompleteFieldGroup.prototype.allFieldsEmpty=function(){for(var currVal,i=0;i<this.components.length;i++)if(currVal=this.components[i].fieldComponent.value(),null!=currVal&&""!=currVal)return!1;return!0},window.ehrComponentsLib.CompoundAutocompleteFieldGroup.prototype.setDatastoreUri=function(datastoreUri){return datastoreUri?void(this._datastoreUri=datastoreUri):void console.log("INFO CompoundAutocompleteFieldGroup setting empty datastoreUri current datastoreUri=",this._datastoreUri)},window.ehrComponentsLib.CompoundAutocompleteFieldGroup.groupsManager=new function(){var compoundGroups=[];this.getFieldGroupById=function(groupId,datastore,underParentContainer){groupId=groupId.toString();for(var i=0;i<compoundGroups.length;i++)if(compoundGroups[i].groupId==groupId&&compoundGroups[i].underParentMultiContainer===underParentContainer)return compoundGroups[i].autocompleteFieldGroup;var newGroup={autocompleteFieldGroup:new window.ehrComponentsLib.CompoundAutocompleteFieldGroup(datastore),groupId:groupId,underParentMultiContainer:underParentContainer};return compoundGroups.push(newGroup),newGroup.autocompleteFieldGroup}};var ehrAngularModule=angular.module("thinkehrForms4");ehrAngularModule.factory("compoundFieldGroupService",function(){return{getFieldGroupById:window.ehrComponentsLib.CompoundAutocompleteFieldGroup.groupsManager.getFieldGroupById}}),window.ehrComponentsLib||(window.ehrComponentsLib={}),window.ehrComponentsLib.compoundAutocompleteFieldCustomFunction=function(datastore){var thinkEHRCustomFunctionToExecute=function(initService){throw new Error("ehrComponentsLib.compoundAutocompleteFieldCustomFunction is deprecated use ehrComponentsLib.compoundAutocompleteFieldCustomFunctionNgExt")};return thinkEHRCustomFunctionToExecute}(new window.ehrComponentsLib.DatastoreFilterQuery),window.ehrComponentsLib||(window.ehrComponentsLib={}),window.ehrComponentsLib.compoundAutocompleteFieldCustomFunctionNg=function(){var thinkEHRCustomFunctionToExecute=function(initService){throw new Error("ehrComponentsLib.compoundAutocompleteFieldCustomFunctionNg is deprecated use ehrComponentsLib.compoundAutocompleteFieldCustomFunctionNgExt")};return thinkEHRCustomFunctionToExecute}();var ehrAngularModule=angular.module("thinkehrForms4");ehrAngularModule.directive("ehrCompoundAutocompleteGroupItem",function(compoundFieldGroupService,datastoreFilterQueryService){return $("#autocomplete-component-style",document.head).length<1&&$(document.head).append("<style id='autocomplete-component-style'> .info { display: block; line-height: 22px; padding: 0 5px 5px 0; color: #36558e; } #shipping { width: 482px; height: 152px; padding: 110px 0 0 30px; background: url('../content/web/autocomplete/shipping.png') transparent no-repeat 0 0; margin: 100px auto; } .k-autocomplete { width: 250px; vertical-align: middle; } .hint { line-height: 22px; color: #aaa; font-style: italic; font-size: .9em; color: #7496d4; } .compound-list-btn { display:inline-block; border: solid 1px #ccc; cursor: pointer; border-radius: 5px; padding: 5px; margin: 5px; text-align: center; }.compound-list-btn:hover{color:#fff; background-color:#999}</style>"),{restrict:"E",template:"<div class='compound-autocomplete-field'><input class='autocomplete-field' /></div>",scope:!0,link:function(scope,iElement,iAttrs,controller,transcludeFn){var fieldsGroup,annDataFieldNameValue,ehrModel=scope.model.getDelegateModel(),annotationsDataFieldName="compoundDataKey",annotationsFieldGroupIdName="compoundGroupId",annotationsDatastoreUriName="datastoreUri";if(ehrModel.getViewConfig().annotations.compoundDataKey){var annGroupId=ehrModel.getViewConfig().annotations[annotationsFieldGroupIdName];null==annGroupId&&(annGroupId=""),fieldsGroup=compoundFieldGroupService.getFieldGroupById(annGroupId,datastoreFilterQueryService);var datastoreUri=ehrModel.getViewConfig().annotations[annotationsDatastoreUriName];fieldsGroup.setDatastoreUri(datastoreUri),annDataFieldNameValue=ehrModel.getViewConfig().annotations[annotationsDataFieldName]}var $autocompleteField=$(".autocomplete-field",iElement),setViewEventHandlers=function(event){var kendoAutocompleteComponent=event.sender;$(".compound-fields-fill",kendoAutocompleteComponent.list.element).off("click").on("click",function(ev){ev.preventDefault(),kendoAutocompleteComponent.close(),fillCompoundFieldsFromItemIndex($(this.parentElement).data("index"))}),$(".compound-field-clear",kendoAutocompleteComponent.list.element).off("click").on("click",function(ev){ev.preventDefault(),setValueFunction(""),fieldsGroup.updateFieldsDatasource(annDataFieldNameValue)}),$(".compound-fields-clear",kendoAutocompleteComponent.list.element).off("click").on("click",function(ev){ev.preventDefault(),fieldsGroup.setCompoundFieldValues({}),fieldsGroup.updateFieldsDatasource(annDataFieldNameValue),updatePopupControlsDisplay(kendoAutocompleteComponent)})},localizedName=ehrModel.getLocalizedName(),headerTemplStr=ehrModel.getViewConfig().annotations.headerTemplate?ehrModel.getViewConfig().annotations.headerTemplate:'<div style="font-weight: bold; text-align: center; "><span class="compound-field-clear compound-list-btn">clear #: currentFieldLabel #</span> <span class="compound-fields-clear compound-list-btn">clear all</span></div>',itemTitleTemplate=ehrModel.getViewConfig().annotations.itemTitleTemplate?ehrModel.getViewConfig().annotations.itemTitleTemplate:'<span class="k-state-default" style="font-weight: bold;">#:data.'+annDataFieldNameValue+"#</span>",itemTextTemplate=ehrModel.getViewConfig().annotations.itemBodyTemplate?ehrModel.getViewConfig().annotations.itemBodyTemplate:'<div class="compound-fields-fill compound-list-btn"> #:data.code#, #:data.part#, #:data.manufacturer#, #:data.material# </div> ',bodyTemplateStr=itemTitleTemplate+itemTextTemplate,kendoAutocompleteComponent=$autocompleteField.kendoAutoComplete({filter:"contains",placeholder:"Select "+localizedName+" ...",separator:"",highlightFirst:!1,minLength:0,headerTemplate:kendo.template(headerTemplStr)({currentFieldLabel:localizedName}),template:kendo.template(bodyTemplateStr),dataTextField:annDataFieldNameValue,dataBound:setViewEventHandlers,valuePrimitive:!0,height:"350"}).data("kendoAutoComplete"),fillCompoundFieldsFromItemIndex=function(itemIndex){var selectedItem=kendoAutocompleteComponent.dataSource.at(itemIndex);selectedItem&&fieldsGroup.setCompoundFieldValues(selectedItem)},setValueFunction=function(value){null==value&&(value=""),scope.$apply(function(){ehrModel.textValue(value)})},updatePopupControlsDisplay=function(kendoAutocompleteComponent){var popupElement=kendoAutocompleteComponent.list,allFieldsEmpty=fieldsGroup.allFieldsEmpty();allFieldsEmpty?$(".compound-fields-clear",popupElement).hide():$(".compound-fields-clear",popupElement).show(),allFieldsEmpty||null==kendoAutocompleteComponent.value()||""==kendoAutocompleteComponent.value()?$(".compound-field-clear",popupElement).hide():$(".compound-field-clear",popupElement).show()};annDataFieldNameValue&&fieldsGroup.registerCompoundField(annDataFieldNameValue,kendoAutocompleteComponent,setValueFunction),kendoAutocompleteComponent.bind("change",function(){setValueFunction(kendoAutocompleteComponent.value())}),kendoAutocompleteComponent.bind("open",function(){updatePopupControlsDisplay(kendoAutocompleteComponent)}),$autocompleteField.on("focus",function(){fieldsGroup.updateFieldsDatasource(annDataFieldNameValue)}),$autocompleteField.on("input",function(){var newVal=$(this).val();fieldsGroup.updateFieldsDatasource(annDataFieldNameValue),""==newVal&&kendoAutocompleteComponent.search(""),setValueFunction(newVal)}),scope.$watch(function(){return ehrModel.textValue()},function(newValue,oldValue){newValue!==oldValue&&(kendoAutocompleteComponent.value(newValue),updatePopupControlsDisplay(kendoAutocompleteComponent))})}}}),window.ehrComponentsLib||(window.ehrComponentsLib={}),window.ehrComponentsLib.compoundAutocompleteFieldCustomFunctionNgExt=function(){var thinkEHRCustomFunctionToExecute=function(formApi){var ehrTFElement=formApi.element;$("input",ehrTFElement);setTimeout(function(){var inputEl1=$("input",ehrTFElement);inputEl1.attr("ehr-compound-field-input-extension",""),formApi.scope._formApi=formApi,formApi.compile(inputEl1)(formApi.scope)})};return thinkEHRCustomFunctionToExecute}();var ehrAngularModule=angular.module("thinkehrForms4");ehrAngularModule.directive("ehrCompoundFieldInputExtension",function(compoundFieldGroupService,datastoreFilterQueryService){return $("#autocomplete-component-style",document.head).length<1&&$(document.head).append("<style id='autocomplete-component-style'> .info { display: block; line-height: 22px; padding: 0 5px 5px 0; color: #36558e; } #shipping { width: 482px; height: 152px; padding: 110px 0 0 30px; background: url('../content/web/autocomplete/shipping.png') transparent no-repeat 0 0; margin: 100px auto; } .k-autocomplete { width: 250px; vertical-align: middle; } .hint { line-height: 22px; color: #aaa; font-style: italic; font-size: .9em; color: #7496d4; } .compound-list-btn { display:inline-block; border: solid 1px #ccc; cursor: pointer; border-radius: 5px; padding: 5px; margin: 5px; text-align: center; }.compound-list-btn:hover{color:#fff; background-color:#999}</style>"),{restrict:"A",scope:!0,link:function(scope,iElement,iAttrs,controller,transcludeFn){var fieldsGroup,annDataFieldNameValue,ehrModel=scope.model,annotationsDataFieldName="compoundDataKey",annotationsFieldGroupIdName="compoundGroupId",annotationsDatastoreUriName="datastoreUri";if(ehrModel.getViewConfig().annotations.compoundDataKey){var annGroupId=ehrModel.getViewConfig().annotations[annotationsFieldGroupIdName];null==annGroupId&&(annGroupId="");var parentContainer;annGroupId&&(parentContainer=scope._formApi.findModelWithTag(annGroupId)),fieldsGroup=compoundFieldGroupService.getFieldGroupById(annGroupId,datastoreFilterQueryService,parentContainer);var datastoreUri=ehrModel.getViewConfig().annotations[annotationsDatastoreUriName];fieldsGroup.setDatastoreUri(datastoreUri),annDataFieldNameValue=ehrModel.getViewConfig().annotations[annotationsDataFieldName]}var $autocompleteField=$(iElement),setViewEventHandlers=function(event){var kendoAutocompleteComponent=event.sender;$(".compound-fields-fill",kendoAutocompleteComponent.list.element).off("click").on("click",function(ev){ev.preventDefault(),kendoAutocompleteComponent.close(),fillCompoundFieldsFromItemIndex($(this.parentElement).data("offset-index"))}),$(".compound-field-clear",kendoAutocompleteComponent.list.element).off("click").on("click",function(ev){ev.preventDefault(),setValueFunction(""),fieldsGroup.updateFieldsDatasource(annDataFieldNameValue)}),$(".compound-fields-clear",kendoAutocompleteComponent.list.element).off("click").on("click",function(ev){ev.preventDefault(),fieldsGroup.setCompoundFieldValues({}),fieldsGroup.updateFieldsDatasource(annDataFieldNameValue),updatePopupControlsDisplay(kendoAutocompleteComponent)})},localizedName=ehrModel.getLocalizedName(),headerTemplStr=ehrModel.getViewConfig().annotations.headerTemplate?ehrModel.getViewConfig().annotations.headerTemplate:'<div style="font-weight: bold; text-align: center; "><span class="compound-field-clear compound-list-btn">clear #: currentFieldLabel #</span> <span class="compound-fields-clear compound-list-btn">clear all</span></div>',itemTitleTemplate=ehrModel.getViewConfig().annotations.itemTitleTemplate?ehrModel.getViewConfig().annotations.itemTitleTemplate:'<span class="k-state-default" style="font-weight: bold;">#:data.'+annDataFieldNameValue+"#</span>",itemTextTemplate=ehrModel.getViewConfig().annotations.itemBodyTemplate?ehrModel.getViewConfig().annotations.itemBodyTemplate:'<div class="compound-fields-fill compound-list-btn"> #:data.code#, #:data.part#, #:data.manufacturer#, #:data.material# </div> ',bodyTemplateStr=itemTitleTemplate+itemTextTemplate,kendoAutocompleteComponent=$autocompleteField.kendoAutoComplete({filter:"contains",placeholder:"Select "+localizedName+" ...",separator:"",highlightFirst:!1,minLength:0,headerTemplate:kendo.template(headerTemplStr)({currentFieldLabel:localizedName}),template:kendo.template(bodyTemplateStr),noDataTemplate:"no data",dataTextField:annDataFieldNameValue,dataBound:setViewEventHandlers,valuePrimitive:!0,height:"450"}).data("kendoAutoComplete"),fillCompoundFieldsFromItemIndex=function(itemIndex){var selectedItem=kendoAutocompleteComponent.dataSource.at(itemIndex);selectedItem&&fieldsGroup.setCompoundFieldValues(selectedItem)},setValueFunction=function(value){null==value&&(value=""),scope.$apply(function(){ehrModel.textValue(value)})},updatePopupControlsDisplay=function(kendoAutocompleteComponent){var popupElement=kendoAutocompleteComponent.list,allFieldsEmpty=fieldsGroup.allFieldsEmpty();allFieldsEmpty?$(".compound-fields-clear",popupElement).hide():$(".compound-fields-clear",popupElement).show(),allFieldsEmpty||null==kendoAutocompleteComponent.value()||""==kendoAutocompleteComponent.value()?$(".compound-field-clear",popupElement).hide():$(".compound-field-clear",popupElement).show()};annDataFieldNameValue&&fieldsGroup.registerCompoundField(annDataFieldNameValue,kendoAutocompleteComponent,setValueFunction),kendoAutocompleteComponent.bind("change",function(){setValueFunction(kendoAutocompleteComponent.value())}),kendoAutocompleteComponent.bind("open",function(){updatePopupControlsDisplay(kendoAutocompleteComponent)}),$autocompleteField.on("focus",function(){fieldsGroup.updateFieldsDatasource(annDataFieldNameValue)}),$autocompleteField.on("input",function(){var newVal=$(this).val();fieldsGroup.updateFieldsDatasource(annDataFieldNameValue),""==newVal&&kendoAutocompleteComponent.search(""),setValueFunction(newVal)}),scope.$watch(function(){return ehrModel.textValue()},function(newValue,oldValue){newValue!==oldValue&&(kendoAutocompleteComponent.value(newValue),updatePopupControlsDisplay(kendoAutocompleteComponent))})}}});